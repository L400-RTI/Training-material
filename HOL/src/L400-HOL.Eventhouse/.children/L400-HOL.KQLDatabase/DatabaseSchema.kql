// KQL script
// Use management commands in this script to configure your database items, such as tables, functions, materialized views, and more.


.create-merge table RawRapidDelivery (SalesOrderNumber:long, ShipDate:string, OrderDate:string, OrderTime:string, DueDate:string, DueTime:string, CustomerKey:string, ProductKey:long, SalesTerritoryKey:long, RevisionNumber:long, OrderQuantity:long, UnitPrice:dynamic, DiscountAmount:dynamic, ProductStandardCost:dynamic, IsRapidDelivery:long, IsRapidDeliveryLarge:long, EventType:string, EventProcessedUtcTime:datetime, PartitionId:long, EventEnqueuedUtcTime:datetime) with (folder = "01. Bronze") 
.create-merge table RawSlowDelivery (SalesOrderNumber:long, ShipDate:string, OrderDate:string, OrderTime:string, DueDate:string, DueTime:string, CustomerKey:string, ProductKey:long, SalesTerritoryKey:long, RevisionNumber:long, OrderQuantity:long, UnitPrice:dynamic, DiscountAmount:dynamic, ProductStandardCost:dynamic, IsRapidDelivery:long, IsRapidDeliveryLarge:long, EventType:string, EventProcessedUtcTime:datetime, PartitionId:long, EventEnqueuedUtcTime:datetime) with (folder = "01. Bronze") 
.create-merge table Anomaly (timestamp:datetime, value:real) with (folder = "Auxiliar") 
.create-or-alter table Anomaly ingestion csv mapping 'Anomaly_mapping'
```
[{"Properties":{"Ordinal":"0"},"column":"timestamp","datatype":""},{"Properties":{"Ordinal":"1"},"column":"value","datatype":""}]
```
.create-merge table Json (ProductKey:int, age:int, name:string, email:string, phone:string, address:string, about:string, registered:datetime, latitude:real, longitude:real, heightCM:int, weightKG:int, tags:dynamic, friends:dynamic, greeting:string, favoriteFruit:string) 
.create-or-alter table Json ingestion json mapping 'Json_mapping'
```
[{"Properties":{"Path":"$['ProductKey']"},"column":"ProductKey","datatype":""},{"Properties":{"Path":"$['age']"},"column":"age","datatype":""},{"Properties":{"Path":"$['name']"},"column":"name","datatype":""},{"Properties":{"Path":"$['email']"},"column":"email","datatype":""},{"Properties":{"Path":"$['phone']"},"column":"phone","datatype":""},{"Properties":{"Path":"$['address']"},"column":"address","datatype":""},{"Properties":{"Path":"$['about']"},"column":"about","datatype":""},{"Properties":{"Path":"$['registered']"},"column":"registered","datatype":""},{"Properties":{"Path":"$['latitude']"},"column":"latitude","datatype":""},{"Properties":{"Path":"$['longitude']"},"column":"longitude","datatype":""},{"Properties":{"Path":"$['heightCM']"},"column":"heightCM","datatype":""},{"Properties":{"Path":"$['weightKG']"},"column":"weightKG","datatype":""},{"Properties":{"Path":"$['tags']"},"column":"tags","datatype":""},{"Properties":{"Path":"$['friends']"},"column":"friends","datatype":""},{"Properties":{"Path":"$['greeting']"},"column":"greeting","datatype":""},{"Properties":{"Path":"$['favoriteFruit']"},"column":"favoriteFruit","datatype":""}]
```
.create-merge table RapidDelivery (SalesOrderNumber:string, ShipDate:datetime, OrderDate:datetime, DueDate:datetime, CustomerKey:string, ProductKey:string, SalesTerritoryKey:string, RevisionNumber:long, OrderQuantity:long, UnitPrice:dynamic, SalesAmount:long, DiscountAmount:dynamic, ProductStandardCost:dynamic, EventType:string) with (folder = "02. Silver") 
.create-merge table SlowDelivery (SalesOrderNumber:string, ShipDate:datetime, OrderDate:datetime, DueDate:datetime, CustomerKey:string, ProductKey:string, SalesTerritoryKey:string, RevisionNumber:long, OrderQuantity:long, UnitPrice:dynamic, SalesAmount:long, DiscountAmount:dynamic, ProductStandardCost:dynamic, EventType:string) with (folder = "02. Silver") 
.create-merge table SalesOrderDetail (SalesOrderID:int, SalesOrderDetailID:int, CarrierTrackingNumber:string, OrderQty:int, ProductID:int, SpecialOfferID:int, UnitPrice:decimal, UnitPriceDiscount:decimal, LineTotal:decimal, rowguid:string, ModifiedDate:datetime) with (folder = "Auxiliar") 
.create-merge table SalesOrderHeader (SalesOrderID:int, RevisionNumber:int, OrderDate:datetime, DueDate:datetime, ShipDate:datetime, Status:int, OnlineOrderFlag:int, SalesOrderNumber:string, PurchaseOrderNumber:string, AccountNumber:string, CustomerID:int, SalesPersonID:int, TerritoryID:int, BillToAddressID:int, ShipToAddressID:int, ShipMethodID:int, CreditCardID:int, CreditCardApprovalCode:string, CurrencyRateID:int, SubTotal:decimal, TaxAmt:decimal, Freight:decimal, TotalDue:int, Comment:string, rowguid:string, ModifiedDate:datetime) with (folder = "Auxiliar") 
.create-merge table FabricWorkspaceEvents (id:string, datacontenttype:string, specversion:real, source:string, ['time']:datetime, subject:string, dataschemaversion:real, type:string, data:dynamic) with (folder = "Auxiliar") 
.create-merge table TruckEvents (TruckID:long, latitude:dynamic, longitude:dynamic, EventProcessedUtcTime:datetime, PartitionId:long, EventEnqueuedUtcTime:datetime) 
.create-or-alter function with (skipvalidation = "true") parse_RapidDelivery() {
RawRapidDelivery
| project SalesOrderNumber=tostring(SalesOrderNumber),
    ShipDate = todatetime(ShipDate),
    OrderDate = todatetime(strcat(OrderDate," ",OrderTime)),
    DueDate = todatetime(strcat(DueDate," ",DueTime)),
    CustomerKey,
    ProductKey = tostring(ProductKey),
    SalesTerritoryKey = tostring(SalesTerritoryKey),
    RevisionNumber,
    OrderQuantity,
    UnitPrice,
    SalesAmount = UnitPrice * OrderQuantity,
    DiscountAmount,
    ProductStandardCost,
    EventType
}
.create-or-alter function with (skipvalidation = "true") parse_SlowDelivery() {
RawSlowDelivery
| project SalesOrderNumber=tostring(SalesOrderNumber),
    ShipDate = todatetime(ShipDate),
    OrderDate = todatetime(strcat(OrderDate," ",OrderTime)),
    DueDate = todatetime(strcat(DueDate," ",DueTime)),
    CustomerKey,
    ProductKey = tostring(ProductKey),
    SalesTerritoryKey = tostring(SalesTerritoryKey),
    RevisionNumber,
    OrderQuantity,
    UnitPrice,
    SalesAmount = UnitPrice * OrderQuantity,
    DiscountAmount,
    ProductStandardCost,
    EventType
}
.create-or-alter materialized-view with (Folder = "03. Gold")  LastRapidDeliveryByCustomer on table RapidDelivery { RapidDelivery
| summarize arg_max(OrderDate, SalesOrderNumber, ProductKey, SalesTerritoryKey, OrderQuantity, UnitPrice, SalesAmount, DiscountAmount, ProductStandardCost) by CustomerKey }
.create-or-alter materialized-view with (Folder = "03. Gold")  TotalSalesByProductOrderDateHour on table RapidDelivery { RapidDelivery
| summarize TotalSales = sum(SalesAmount) by ProductKey, bin(OrderDate,1h) }
.alter table RapidDelivery policy update "[{\"IsEnabled\":true,\"Source\":\"RawRapidDelivery\",\"Query\":\"parse_RapidDelivery\",\"IsTransactional\":false,\"PropagateIngestionProperties\":false,\"ManagedIdentity\":null}]"
.alter table SlowDelivery policy update "[{\"IsEnabled\":true,\"Source\":\"RawSlowDelivery\",\"Query\":\"parse_SlowDelivery\",\"IsTransactional\":false,\"PropagateIngestionProperties\":false,\"ManagedIdentity\":null}]"
